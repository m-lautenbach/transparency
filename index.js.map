{"version":3,"file":"index.js","sources":["lib/server.js"],"sourcesContent":["var express = require('express')\nvar app = express();\nvar http = require('http').Server(app);\nvar io = require('socket.io')(http);\nvar Rx = require('rxjs/Rx')\nvar {values, map, flow, set, assign, omit, differenceWith} = require('lodash/fp')\n\napp.use(express.static('public'))\napp.get('/*', function(req, res){\n  res.sendFile(__dirname + '/index.html');\n});\n\nfunction getSocketDetails(socket) {\n  return {socketId:socket.id, address:socket.handshake.address}\n}\n\ngetConnectedClients = flow(\n  values,\n  map(getSocketDetails)\n)\n\nfunction accumulate(list, item) {\n    return list.concat([item])\n}\n\nmasterNS = io.of('/master')\n\nvar masterSockets = Rx.Observable\n  .fromEvent(masterNS, 'connection')\n\nvar connections = Rx.Observable\n  .fromEvent(io, 'connection')\n\nvar disconnections = connections\n  .map(\n    socket => Rx.Observable\n      .fromEvent(socket, 'disconnect')\n      .combineLatest(Rx.Observable.of(socket))\n  )\n  .mergeAll()\n\nvar clients = connections\n  .map(\n    socket => Rx.Observable\n      .fromEvent(socket, 'client details')\n      .combineLatest(\n        Rx.Observable.of(socket)\n      )\n  )\n  .mergeAll()\n  .map(\n    ([clientDetails, socket]) =>\n      assign(\n        clientDetails,\n        getSocketDetails(socket),\n        {socket: socket}\n      )\n  )\n\nvar allConnections = clients\n  .scan(accumulate, [])\n  .merge(\n      Rx.Observable.of([])\n  )\n\nvar allDisconnections = disconnections\n  .scan(accumulate, [])\n  .merge(\n      Rx.Observable.of([])\n  )\n\nvar connectedClients = Rx.Observable\n    .combineLatest(\n        allConnections,\n        allDisconnections,\n        (connections, disconnections) =>\n            differenceWith(\n                (client, [msg, socket]) => client.socketId === socket.id,\n                connections,\n                disconnections\n            )\n    )\n\nmasterSockets\n  .withLatestFrom(connectedClients)\n  .subscribe(\n    function([masterSocket, connectedClients]) {\n      masterSocket.emit('client list',\n        map(\n          (client) => omit('socket', client),\n          connectedClients\n))})\n\nclients\n  .map(client => omit('socket', client))\n  .subscribe(\n    client =>\n      masterNS.emit('client connected', client)\n  )\n\ndisconnections\n  .subscribe(\n    ([msg, socket]) => masterNS.emit('client disconnected', socket.id)\n  )\n\nhttp.listen(3000, function(){\n  console.log('listening on *:3000');\n});\n"],"names":[],"mappings":"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"}